package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import Connection.ConnectionMysql;
import model.Clientes;


public class clientesDAO {

	public void save(Clientes clientes) {
		
		String sql = "INSERT INTO clientes (id_cpf, nome, email, senha, telefone) VALUES (?, ?, ?, ?, ?)" ;
				
				Connection conn = null;
				PreparedStatement pstm = null;
				
				try {
					conn = ConnectionMysql.createConnectionMysql();
					
					pstm = conn.prepareStatement(sql);
					
					pstm.setInt(1, clientes.getId_cpf());
					pstm.setString(2, clientes.getNome());
					pstm.setString(3, clientes.getEmail());
					pstm.setString(4, clientes.getSenha());
					pstm.setInt(5, clientes.getTelefone());
					
					pstm.execute();
					
				}catch (Exception e) {
					e.printStackTrace();
				} finally {
					
					try {
						if(pstm != null) {
							pstm.close();
						}
						if(conn != null) {
							conn.close();
						}
						
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
	}
	
	public void removeById(int id) {
		
		String sql = "DELETE FROM clientes WHERE id = ?";
		
		Connection conn = null;
		PreparedStatement pstm = null;
		
		try {
			conn = ConnectionMysql.createConnectionMysql();
			
			pstm = conn.prepareStatement(sql);
			
			pstm.setInt(1, id);
			
			pstm.execute();
			
		}catch (Exception e) {
			e.printStackTrace();
		}finally {
			
			try {
				if(pstm != null) {
					pstm.close();
				}
				
				if(conn != null) {
					conn.close();
				}
			}catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
	
	public void update(Clientes clientes) {
		
		String sql = "UPDATE clientes SET nome = ?, email = ?, senha = ?. telefone = ?" + "WHERE id_cpf = ?";
		
		Connection conn = null;
		PreparedStatement pstm = null;
		
		try {
			conn = ConnectionMysql.createConnectionMysql();
			
			pstm = conn.prepareStatement(sql);
			
			pstm.setInt(1, clientes.getId_cpf());
			pstm.setString(2, clientes.getNome());
			pstm.setString(3, clientes.getEmail());
			pstm.setString(4, clientes.getSenha());
			pstm.setInt(5, clientes.getTelefone());
			
			pstm.execute();
			
		}catch (Exception e) {
			e.printStackTrace();
		}finally {
			
			try {
				if(pstm != null) {
					pstm.close();
				}
				if(conn != null) {
					conn.close();
				}
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
	
	}
	
	public List<Clientes> getClientes(){
		
		String sql = "SELECT * FROM clientes";
		
		List<Clientes> clientes = new ArrayList<Clientes>();
		
		Connection conn = null;
		PreparedStatement pstm = null;
		
		ResultSet rset = null;
		
		try {
			conn = ConnectionMysql.createConnectionMysql();
			
			pstm = conn.prepareStatement(sql);
			
			rset = pstm.executeQuery();
			
			while(rset.next()) {
				
				Clientes Clientes = new Clientes();
				
				Clientes.setId_cpf(rset.getInt("id_cpf"));
				
				Clientes.setNome(rset.getString("nome"));
				
				Clientes.setEmail(rset.getString("email"));
				
				Clientes.setSenha(rset.getString("senha"));
				
				Clientes.setTelefone(rset.getInt("telefone"));
				
				Clientes.add(clientes);	
			}
		}catch (Exception e) {
			e.printStackTrace();
		
		}finally {
			
			try {
				
				if(rset != null) {
					rset.close();
				}
				
				if(pstm != null) {
					pstm.close();
				}
				
				if(conn != null) {
					conn.close();
				}
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
		return clientes;
	}
}